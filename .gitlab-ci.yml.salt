stages:
  - build
  - push
  - pull
  - count
  - refresh
  - run_1
  - run_2
  - run_3
  - run_4
  - run_5

variables:
  GIT_STRATEGY: none
  GIT_SUBMODULE_STRATEGY: none

build:
  tags:
    - __DEV_RUNNER__
  stage: build
  variables:
    GIT_STRATEGY: fetch
    GIT_SUBMODULE_STRATEGY: normal
  rules:
    - if: $SALT_CMD || $RSNAPSHOT_BACKUP_TYPE
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_REF_NAME
  script:
    - echo IMAGE $CI_PROJECT_PATH:$CI_PIPELINE_ID
    - docker build --pull --tag $CI_PROJECT_PATH:$CI_PIPELINE_ID --build-arg SALT_VERSION=__SALT_VERSION__ .
    - docker run --rm $CI_PROJECT_PATH:$CI_PIPELINE_ID -- /.check_pillar_for_roster.sh

push:
  tags:
    - __DEV_RUNNER__
  stage: push
  rules:
    - if: $SALT_CMD || $RSNAPSHOT_BACKUP_TYPE
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - echo IMAGE $CI_PROJECT_PATH:$CI_PIPELINE_ID "->" $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker tag $CI_PROJECT_PATH:$CI_PIPELINE_ID $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG

.salt_master_pull:
  stage: pull
  rules:
    - if: $SALT_CMD || $RSNAPSHOT_BACKUP_TYPE
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - sudo /srv/scripts/ci_sudo/salt_master_pull.sh

salt_master_pull_1:
  extends: .salt_master_pull
  tags:
    - __SALT_MASTER_1_NAME__

salt_master_pull_2:
  extends: .salt_master_pull
  tags:
    - __SALT_MASTER_2_NAME__

.count_alive_minions:
  stage: count
  rules:
    - if: $SALT_SSH_IN_SALT == "true"
      when: never
    - if: $SALT_MINION && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  artifacts:
    paths:
      - alive_minions
  script:
    - /srv/.gitlab-server-job/count_alive_minions.sh
  after_script:
    - /srv/.gitlab-server-job/send_notify_devilry.sh

count_alive_minions_1:
  extends: .count_alive_minions
  tags:
    - __SALT_MASTER_1_NAME__

count_alive_minions_2:
  extends: .count_alive_minions
  tags:
    - __SALT_MASTER_2_NAME__

.refresh_pillar:
  stage: refresh
  rules:
    - if: $SALT_SSH_IN_SALT == "true"
      when: never
    - if: $SALT_MINION && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - /srv/.gitlab-server-job/check_alive_minions.sh
    - /srv/.gitlab-server-job/refresh_pillar.sh
  after_script:
    - /srv/.gitlab-server-job/send_notify_devilry.sh
    - rm -rf alive_minions

refresh_pillar_1:
  extends: .refresh_pillar
  tags:
    - __SALT_MASTER_1_NAME__

refresh_pillar_2:
  extends: .refresh_pillar
  tags:
    - __SALT_MASTER_2_NAME__

.salt_cmd:
  stage: run_1
  rules:
    - if: $SALT_SSH_IN_SALT == "true"
      when: never
    - if: $SALT_CMD && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - /srv/.gitlab-server-job/check_alive_minions.sh
    - /srv/.gitlab-server-job/salt_cmd.sh
  after_script:
    - /srv/.gitlab-server-job/send_notify_devilry.sh
    - rm -rf alive_minions

salt_cmd_1:
  extends: .salt_cmd
  tags:
    - __SALT_MASTER_1_NAME__

salt_cmd_2:
  extends: .salt_cmd
  tags:
    - __SALT_MASTER_2_NAME__

salt_cmd:
  tags:
    - salt-ssh
  stage: run_1
  image: $CI_REGISTRY/$CI_PROJECT_PATH:master
  rules:
    - if: $SALT_CMD && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $SALT_SSH_IN_SALT == "true"
  script:
    - /srv/scripts/salt-ssh/salt_cmd.sh "${SALT_MINION}" "${SALT_CMD}"
  after_script:
    - /srv/scripts/salt-ssh/send_notify_devilry.sh

.rsnapshot_backup_update_config:
  stage: run_1
  rules:
    - if: $SALT_SSH_IN_SALT == "true"
      when: never
    - if: $RSNAPSHOT_BACKUP_TYPE && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - /srv/.gitlab-server-job/check_alive_minions.sh
    - /srv/.gitlab-server-job/rsnapshot_backup_update_config.sh
  after_script:
    - /srv/.gitlab-server-job/send_notify_devilry.sh
    - rm -rf alive_minions

rsnapshot_backup_update_config_1:
  extends: .rsnapshot_backup_update_config
  tags:
    - __SALT_MASTER_1_NAME__

rsnapshot_backup_update_config_2:
  extends: .rsnapshot_backup_update_config
  tags:
    - __SALT_MASTER_2_NAME__

rsnapshot_backup_update_config:
  tags:
    - salt-ssh
  stage: run_1
  image: $CI_REGISTRY/$CI_PROJECT_PATH:master
  rules:
    - if: $RSNAPSHOT_BACKUP_TYPE && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $SALT_SSH_IN_SALT == "true"
  script:
    - /srv/scripts/salt-ssh/rsnapshot_backup_update_config.sh "${SALT_MINION}"
  after_script:
    - /srv/scripts/salt-ssh/send_notify_devilry.sh

.rsnapshot_backup_sync:
  stage: run_2
  rules:
    - if: $SALT_SSH_IN_SALT == "true"
      when: never
    - if: $RSNAPSHOT_BACKUP_TYPE && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  artifacts:
    paths:
      - rsnapshot_backup_sync_status
    when: always
  allow_failure: True # Even if sync fails, go to rotation, status for alerting is sent as artifact
  script:
    - /srv/.gitlab-server-job/check_alive_minions.sh
    - /srv/.gitlab-server-job/rsnapshot_backup_sync.sh
  after_script:
    - /srv/.gitlab-server-job/send_notify_devilry.sh
    - rm -rf alive_minions

rsnapshot_backup_sync_1:
  extends: .rsnapshot_backup_sync
  tags:
    - __SALT_MASTER_1_NAME__

rsnapshot_backup_sync_2:
  extends: .rsnapshot_backup_sync
  tags:
    - __SALT_MASTER_2_NAME__

rsnapshot_backup_sync:
  tags:
    - salt-ssh
  stage: run_2
  image: $CI_REGISTRY/$CI_PROJECT_PATH:master
  rules:
    - if: $RSNAPSHOT_BACKUP_TYPE && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $SALT_SSH_IN_SALT == "true"
  artifacts:
    paths:
      - rsnapshot_backup_sync_status
    when: always
  allow_failure: True # Even if sync fails, go to rotation, status for alerting is sent as artifact
  script:
    - |
      if /srv/scripts/salt-ssh/rsnapshot_backup_sync.sh "${SALT_MINION}" "${RSNAPSHOT_BACKUP_TYPE}" "${SSH_HOST}" "${SSH_PORT}" "${SSH_JUMP}"; then
        echo "export RSNAPSHOT_BACKUP_SYNC=success" > rsnapshot_backup_sync_status
      else
        echo "export RSNAPSHOT_BACKUP_SYNC=failed" > rsnapshot_backup_sync_status
        false
      fi
  after_script:
    - /srv/scripts/salt-ssh/send_notify_devilry.sh

.rsnapshot_backup_rotate:
  stage: run_3
  rules:
    - if: $SALT_SSH_IN_SALT == "true"
      when: never
    - if: $RSNAPSHOT_BACKUP_TYPE && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - /srv/.gitlab-server-job/check_alive_minions.sh
    - /srv/.gitlab-server-job/rsnapshot_backup_rotate.sh
  after_script:
    - . rsnapshot_backup_sync_status
    - /srv/.gitlab-server-job/send_notify_devilry.sh
    - rm -rf alive_minions
    - rm -f rsnapshot_backup_sync_status

rsnapshot_backup_rotate_1:
  extends: .rsnapshot_backup_rotate
  tags:
    - __SALT_MASTER_1_NAME__

rsnapshot_backup_rotate_2:
  extends: .rsnapshot_backup_rotate
  tags:
    - __SALT_MASTER_2_NAME__

rsnapshot_backup_rotate:
  tags:
    - salt-ssh
  stage: run_3
  image: $CI_REGISTRY/$CI_PROJECT_PATH:master
  rules:
    - if: $RSNAPSHOT_BACKUP_TYPE && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $SALT_SSH_IN_SALT == "true"
  script:
    - /srv/scripts/salt-ssh/rsnapshot_backup_rotate.sh "${SALT_MINION}" "${RSNAPSHOT_BACKUP_TYPE}" "${SSH_HOST}" "${SSH_PORT}" "${SSH_JUMP}"
  after_script:
    - . rsnapshot_backup_sync_status
    - /srv/scripts/salt-ssh/send_notify_devilry.sh
    - rm -f rsnapshot_backup_sync_status

.rsnapshot_backup_check_backup:
  stage: run_4
  rules:
    - if: $SALT_SSH_IN_SALT == "true"
      when: never
    - if: $RSNAPSHOT_BACKUP_TYPE && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - /srv/.gitlab-server-job/check_alive_minions.sh
    - /srv/.gitlab-server-job/rsnapshot_backup_check_backup.sh
  after_script:
    - . rsnapshot_backup_sync_status
    - /srv/.gitlab-server-job/send_notify_devilry.sh
    - rm -rf alive_minions
    - rm -f rsnapshot_backup_sync_status

rsnapshot_backup_check_backup_1:
  extends: .rsnapshot_backup_check_backup
  tags:
    - __SALT_MASTER_1_NAME__

rsnapshot_backup_check_backup_2:
  extends: .rsnapshot_backup_check_backup
  tags:
    - __SALT_MASTER_2_NAME__

rsnapshot_backup_check_backup:
  tags:
    - salt-ssh
  stage: run_4
  image: $CI_REGISTRY/$CI_PROJECT_PATH:master
  rules:
    - if: $RSNAPSHOT_BACKUP_TYPE && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $SALT_SSH_IN_SALT == "true"
  script:
    - /srv/scripts/salt-ssh/rsnapshot_backup_check_backup.sh "${SALT_MINION}" "${RSNAPSHOT_BACKUP_TYPE}" "${SSH_HOST}" "${SSH_PORT}" "${SSH_JUMP}"
  after_script:
    - . rsnapshot_backup_sync_status
    - /srv/scripts/salt-ssh/send_notify_devilry.sh
    - rm -f rsnapshot_backup_sync_status

.rsnapshot_backup_check_coverage:
  stage: run_5
  rules:
    - if: $SALT_SSH_IN_SALT == "true"
      when: never
    - if: $RSNAPSHOT_BACKUP_TYPE && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - /srv/.gitlab-server-job/check_alive_minions.sh
    - /srv/.gitlab-server-job/rsnapshot_backup_check_coverage.sh
  after_script:
    - . rsnapshot_backup_sync_status
    - /srv/.gitlab-server-job/send_notify_devilry.sh
    - rm -rf alive_minions
    - rm -f rsnapshot_backup_sync_status

rsnapshot_backup_check_coverage_1:
  extends: .rsnapshot_backup_check_coverage
  tags:
    - __SALT_MASTER_1_NAME__

rsnapshot_backup_check_coverage_2:
  extends: .rsnapshot_backup_check_coverage
  tags:
    - __SALT_MASTER_2_NAME__

rsnapshot_backup_check_coverage:
  tags:
    - salt-ssh
  stage: run_5
  image: $CI_REGISTRY/$CI_PROJECT_PATH:master
  rules:
    - if: $RSNAPSHOT_BACKUP_TYPE && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $SALT_SSH_IN_SALT == "true"
  script:
    - /srv/scripts/salt-ssh/rsnapshot_backup_check_coverage.sh "${SALT_MINION}"
  after_script:
    - . rsnapshot_backup_sync_status
    - /srv/scripts/salt-ssh/send_notify_devilry.sh
    - rm -f rsnapshot_backup_sync_status
